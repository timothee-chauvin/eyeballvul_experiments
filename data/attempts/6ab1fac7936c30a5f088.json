{
  "commit": "d6e2874a69eb30e9c0b2917f1193c1b3492a46ce",
  "repo_url": "https://github.com/jenkinsci/azure-ad-plugin",
  "model": "gemini/gemini-1.5-pro",
  "chunk_hashes": [
    "0bc204e38b3759a29e78"
  ],
  "responses": [
    {
      "content": "```yaml\nleads:\n  - headline: Potential Cross-Site Scripting (XSS) via User/Group Display Names in Authorization Matrix\n    analysis: |\n      The `table.js` file, responsible for handling user/group additions to the authorization matrix, directly inserts user display names and group names (including their object IDs) into the HTML table without proper escaping. This could allow an attacker to inject malicious JavaScript code if they can control a user's display name or a group's name in Azure Active Directory. An attacker could potentially create a user or group with a specially crafted name containing malicious JavaScript code. When an administrator views the authorization matrix in Jenkins, the injected code would be executed in their browser, potentially allowing the attacker to steal the administrator's session cookies or perform other malicious actions.\n    cwe: CWE-79\n    function_names: []\n    filenames:\n      - src/main/resources/com/microsoft/jenkins/azuread/table.js\n    classification: slightly promising\n  - headline: Potential Server-Side Request Forgery (SSRF) in Graph Proxy\n    analysis: |\n      The `GraphProxy` class, which handles proxying requests to the Microsoft Graph API, uses the `buildUrl` method to construct the target URL based on the incoming request. The method attempts to replace '/me' in the request path with 'users/{objectID}' to support service principals. However, if an attacker sends a request with a path like '/me/../../evil.com', the resulting URL would be `https://graph.microsoft.com/v1.0/../../evil.com`, allowing them to make requests to arbitrary domains from the Jenkins server. This could be exploited by an attacker to access internal services or data that are not publicly accessible.\n    cwe: CWE-918\n    function_names:\n      - buildUrl\n    filenames:\n      - src/main/java/com/microsoft/jenkins/azuread/GraphProxy.java\n    classification: very promising\n```",
      "date": "2024-06-12T12:53:24.593084",
      "usage": {
        "prompt_tokens": 31482,
        "completion_tokens": 397,
        "cost": 0.1143555
      }
    }
  ],
  "leads": [
    {
      "headline": "Potential Cross-Site Scripting (XSS) via User/Group Display Names in Authorization Matrix",
      "analysis": "The table.js file, responsible for handling user/group additions to the authorization matrix, directly inserts user display names and group names (including their object IDs) into the HTML table without proper escaping. This could allow an attacker to inject malicious JavaScript code if they can control a user's display name or a group's name in Azure Active Directory. An attacker could potentially create a user or group with a specially crafted name containing malicious JavaScript code. When an administrator views the authorization matrix in Jenkins, the injected code would be executed in their browser, potentially allowing the attacker to steal the administrator's session cookies or perform other malicious actions.\n",
      "classification": "slightly promising",
      "cwe": "CWE-79",
      "function_names": [],
      "filenames": [
        "src/main/resources/com/microsoft/jenkins/azuread/table.js"
      ]
    },
    {
      "headline": "Potential Server-Side Request Forgery (SSRF) in Graph Proxy",
      "analysis": "The GraphProxy class, which handles proxying requests to the Microsoft Graph API, uses the buildUrl method to construct the target URL based on the incoming request. The method attempts to replace '/me' in the request path with 'users/{objectID}' to support service principals. However, if an attacker sends a request with a path like '/me/../../evil.com', the resulting URL would be https://graph.microsoft.com/v1.0/../../evil.com, allowing them to make requests to arbitrary domains from the Jenkins server. This could be exploited by an attacker to access internal services or data that are not publicly accessible.\n",
      "classification": "very promising",
      "cwe": "CWE-918",
      "function_names": [
        "buildUrl"
      ],
      "filenames": [
        "src/main/java/com/microsoft/jenkins/azuread/GraphProxy.java"
      ]
    }
  ],
  "scores": [
    {
      "stats": {
        "fn": 1,
        "tp": 0,
        "fp": 1
      },
      "mapping": {},
      "vuln_dates": {
        "CVE-2023-41935": "2023-09-06T13:15:10"
      },
      "scoring_model": "claude-3-opus-20240229",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    },
    {
      "stats": {
        "fn": 1,
        "tp": 0,
        "fp": 1
      },
      "mapping": {},
      "vuln_dates": {
        "CVE-2023-41935": "2023-09-06T13:15:10"
      },
      "scoring_model": "claude-3-5-sonnet-20240620",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    }
  ],
  "instruction_template_hash": "10c0163db4740318a544",
  "version": "0.1.0"
}
