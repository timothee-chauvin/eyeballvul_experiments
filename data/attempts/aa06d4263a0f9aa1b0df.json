{
  "commit": "41827b12956663771170819f65fe1af4a2f5ebcb",
  "repo_url": "https://github.com/jonschlinkert/word-wrap",
  "model": "gemini/gemini-1.5-pro",
  "chunk_hashes": [
    "7fd4d8d692233ec0e165"
  ],
  "responses": [
    {
      "content": "```yaml\nleads:\n  - headline: Regex in word-wrap could allow injection in edge cases\n    analysis: |\n      The `word-wrap` package uses a dynamically generated Regexp based on user input:\n      ```javascript\n      var re = new RegExp(regexString, 'g');\n      var lines = str.match(re) || [];\n      ```\n      While an attacker doesn't control the `regexString` directly, it's conceivable that, for some inputs to this word-wrapping function, the attacker might be able to cause the generated Regexp to exhibit \"catastrophic backtracking\" behavior and consume excessive resources.  The impact of such a vulnerability is highly dependent on how the function is used and what its inputs are.\n    cwe: CWE-1333\n    function_names:\n      - wrap\n    filenames:\n      - index.js\n    classification: slightly promising\n```",
      "date": "2024-06-14T14:30:58.662916",
      "usage": {
        "prompt_tokens": 3979,
        "completion_tokens": 181,
        "cost": 0.00282625
      }
    }
  ],
  "leads": [],
  "scores": [
    {
      "stats": {
        "fn": 1,
        "tp": 0,
        "fp": 0
      },
      "mapping": {},
      "vuln_dates": {
        "CVE-2023-26115": "2023-06-22T05:15:09"
      },
      "scoring_model": "claude-3-opus-20240229",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    },
    {
      "stats": {
        "fn": 1,
        "tp": 0,
        "fp": 0
      },
      "mapping": {},
      "vuln_dates": {
        "CVE-2023-26115": "2023-06-22T05:15:09"
      },
      "scoring_model": "claude-3-5-sonnet-20240620",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    }
  ],
  "instruction_template_hash": "10c0163db4740318a544",
  "version": "0.1.0"
}
