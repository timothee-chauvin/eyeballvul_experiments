{
  "commit": "21eb9f67a545d9320558b20876b1551e9f38e52f",
  "repo_url": "https://github.com/jprichardson/string.js",
  "model": "gemini/gemini-1.5-pro",
  "chunk_hashes": [
    "7509cda243d87a27563b"
  ],
  "responses": [
    {
      "content": "```yaml\nleads:\n  - headline: Potential XSS via wrapHTML tag attribute\n    analysis: |\n      The `wrapHTML` function in `lib/string.js` takes a `tagName` and `tagAttrs` as arguments.\n      It then constructs an HTML string using these arguments, but it only escapes the values of the attributes, not the attribute names themselves. \n      An attacker can control both the tag name and attribute names, which opens up the possibility of injecting arbitrary HTML attributes, including event handlers that trigger JavaScript execution.\n      For instance, calling `S('test').wrapHTML('img', {'onload':'alert(1)'})` would result in the string `<img onload=\"alert(1)\">test</img>`, which would execute the attacker's code.\n    cwe: CWE-79\n    function_names:\n      - wrapHTML\n    filenames:\n      - lib/string.js\n    classification: slightly promising\n```",
      "date": "2024-06-13T09:03:20.462659",
      "usage": {
        "prompt_tokens": 41750,
        "completion_tokens": 191,
        "cost": 0.026451875000000003
      }
    }
  ],
  "leads": [
    {
      "headline": "Potential XSS via wrapHTML tag attribute",
      "analysis": "The wrapHTML function in lib/string.js takes a tagName and tagAttrs as arguments.\nIt then constructs an HTML string using these arguments, but it only escapes the values of the attributes, not the attribute names themselves. \nAn attacker can control both the tag name and attribute names, which opens up the possibility of injecting arbitrary HTML attributes, including event handlers that trigger JavaScript execution.\nFor instance, calling S('test').wrapHTML('img', {'onload':'alert(1)'}) would result in the string <img onload=\"alert(1)\">test</img>, which would execute the attacker's code.\n",
      "classification": "slightly promising",
      "cwe": "CWE-79",
      "function_names": [
        "wrapHTML"
      ],
      "filenames": [
        "lib/string.js"
      ]
    }
  ],
  "scores": [
    {
      "stats": {
        "fn": 1,
        "tp": 0,
        "fp": 0
      },
      "mapping": {},
      "vuln_dates": {
        "CVE-2017-16116": "2018-06-07T02:29:02"
      },
      "scoring_model": "claude-3-opus-20240229",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    },
    {
      "stats": {
        "fn": 1,
        "tp": 0,
        "fp": 0
      },
      "mapping": {},
      "vuln_dates": {
        "CVE-2017-16116": "2018-06-07T02:29:02"
      },
      "scoring_model": "claude-3-5-sonnet-20240620",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    }
  ],
  "instruction_template_hash": "10c0163db4740318a544",
  "version": "0.1.0"
}
