{
  "commit": "7c293966eaa3a49c5390f98a5e7f57c136e7faaa",
  "repo_url": "https://github.com/alphagov/tech-docs-gem",
  "model": "gpt-4o-2024-05-13",
  "chunk_hashes": [
    "c404cf22ac18bb5f57c4"
  ],
  "responses": [
    {
      "content": "```yaml\nleads:\n  - headline: OS Command Injection via Untrusted Search Index\n    analysis: |\n      The `downloadSearchIndex` function in `example/source/javascripts/application.js` line 46 makes an HTTP GET request to `'example/build/search.json'` without proper validation or sanitization of the response. If an attacker can control the content of the file `search.json`, they could mount an OS command injection attack by crafting a malicious file with JavaScript that will be evaluated in context.\n    cwe: CWE-78\n    function_names:\n      - downloadSearchIndex\n    filenames:\n      - example/source/javascripts/application.js\n    classification: very promising\n  - headline: Potential XSS Vulnerability in Dynamic Query Processing\n    analysis: |\n      The function `processContent` concatenates HTML strings potentially including untrusted input `query` without sufficient sanitization in `spec/javascripts/search-spec.js` line 60. This can allow an attacker to inject malicious scripts within the search query, leading to cross-site scripting (XSS) attacks.\n    cwe: CWE-79\n    function_names:\n      - processContent\n    filenames:\n      - spec/javascripts/search-spec.js\n    classification: very promising\n  - headline: Reflected XSS via Search Query Parameters\n    analysis: |\n      In `spec/javascripts/search-spec.js` on line 73, the function `doSearch` uses `document.title` to set the page title with unescaped user input `query`. If an attacker can control the query string in the URL, they could inject arbitrary HTML/JavaScript leading to reflected XSS.\n    cwe: CWE-79\n    function_names:\n      - doSearch\n    filenames:\n      - spec/javascripts/search-spec.js\n    classification: very promising\n  - headline: Insecure Use of `eval` in analytics.js\n    analysis: |\n      The `stripPIIFromString` function in `lib/assets/javascripts/_analytics.js` on line 28 could be manipulated using user-controlled strings to include malicious payloads that will get executed within the context of the site, related to PII stripping.\n    cwe: CWE-94\n    function_names:\n      - stripPIIFromString\n    filenames:\n      - lib/assets/javascripts/_analytics.js\n    classification: slightly promising\n```",
      "date": "2024-06-08T22:11:32.764512",
      "usage": {
        "prompt_tokens": 61027,
        "completion_tokens": 490,
        "cost": 0.312485
      }
    }
  ],
  "leads": [
    {
      "headline": "OS Command Injection via Untrusted Search Index",
      "analysis": "The downloadSearchIndex function in example/source/javascripts/application.js line 46 makes an HTTP GET request to 'example/build/search.json' without proper validation or sanitization of the response. If an attacker can control the content of the file search.json, they could mount an OS command injection attack by crafting a malicious file with JavaScript that will be evaluated in context.\n",
      "classification": "very promising",
      "cwe": "CWE-78",
      "function_names": [
        "downloadSearchIndex"
      ],
      "filenames": [
        "example/source/javascripts/application.js"
      ]
    },
    {
      "headline": "Potential XSS Vulnerability in Dynamic Query Processing",
      "analysis": "The function processContent concatenates HTML strings potentially including untrusted input query without sufficient sanitization in spec/javascripts/search-spec.js line 60. This can allow an attacker to inject malicious scripts within the search query, leading to cross-site scripting (XSS) attacks.\n",
      "classification": "very promising",
      "cwe": "CWE-79",
      "function_names": [
        "processContent"
      ],
      "filenames": [
        "spec/javascripts/search-spec.js"
      ]
    },
    {
      "headline": "Reflected XSS via Search Query Parameters",
      "analysis": "In spec/javascripts/search-spec.js on line 73, the function doSearch uses document.title to set the page title with unescaped user input query. If an attacker can control the query string in the URL, they could inject arbitrary HTML/JavaScript leading to reflected XSS.\n",
      "classification": "very promising",
      "cwe": "CWE-79",
      "function_names": [
        "doSearch"
      ],
      "filenames": [
        "spec/javascripts/search-spec.js"
      ]
    },
    {
      "headline": "Insecure Use of eval in analytics.js",
      "analysis": "The stripPIIFromString function in lib/assets/javascripts/_analytics.js on line 28 could be manipulated using user-controlled strings to include malicious payloads that will get executed within the context of the site, related to PII stripping.\n",
      "classification": "slightly promising",
      "cwe": "CWE-94",
      "function_names": [
        "stripPIIFromString"
      ],
      "filenames": [
        "lib/assets/javascripts/_analytics.js"
      ]
    }
  ],
  "scores": [
    {
      "stats": {
        "fn": 0,
        "tp": 1,
        "fp": 2
      },
      "mapping": {
        "1": "CVE-2024-22048"
      },
      "vuln_dates": {
        "CVE-2024-22048": "2024-01-04T21:15:09"
      },
      "scoring_model": "gpt-4o-2024-05-13",
      "type": "llm",
      "instruction_template_hash": "8998f09cf57fca8a6e03"
    },
    {
      "stats": {
        "fn": 0,
        "tp": 1,
        "fp": 1
      },
      "mapping": {
        "1": "CVE-2024-22048",
        "2": "CVE-2024-22048"
      },
      "vuln_dates": {
        "CVE-2024-22048": "2024-01-04T21:15:09"
      },
      "scoring_model": "claude-3-opus-20240229",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    },
    {
      "stats": {
        "fn": 0,
        "tp": 1,
        "fp": 1
      },
      "mapping": {
        "1": "CVE-2024-22048",
        "2": "CVE-2024-22048"
      },
      "vuln_dates": {
        "CVE-2024-22048": "2024-01-04T21:15:09"
      },
      "scoring_model": "claude-3-5-sonnet-20240620",
      "type": "llm",
      "instruction_template_hash": "245ace12b6361954d0a2"
    }
  ],
  "instruction_template_hash": "10c0163db4740318a544",
  "version": "0.1.0"
}
